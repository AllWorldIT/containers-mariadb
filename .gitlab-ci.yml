# Copyright (c) 2022-2023, AllWorldIT.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


include:
  - project: 'gitlab/templates/containers'
    ref: main
    file: '/default.yml'


.docker_login_template: &docker_login
  before_script:
    # Group login incase we need to pull group images from a private registry
    - |
      if [ -n "$GROUP_CI_REGISTRY_USER" -a -n "$GROUP_CI_REGISTRY_PASSWORD" ]; then
        echo "Group CI login to '${GROUP_CI_REGISTRY}'...";
        echo "$GROUP_CI_REGISTRY_PASSWORD" | docker login --username "$GROUP_CI_REGISTRY_USER" --password-stdin "$GROUP_CI_REGISTRY";
      fi
    # Login to this repositories registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"


test-cluster:
  <<: *docker_login
  stage: test
  allow_failure: true
  parallel:
    matrix:
      - WITH_GTID: [ "GTID:off", "GTID:on" ]
  script:
    - if [ "$WITH_GTID" = "GTID:on" ]; then WITH_GTID=-gtid; else WITH_GTID=""; fi
    - docker pull "${PIPELINE_IMAGE}"
    - cp -a tests "tests-${CI_COMMIT_SHORT_SHA}-${CI_CONCURRENT_ID}"
    - cd "tests-${CI_COMMIT_SHORT_SHA}-${CI_CONCURRENT_ID}"
    - sed -e "s,@@PIPELINE_IMAGE@@,${PIPELINE_IMAGE}," -e "s,@@WITH_GTID@@,${WITH_GTID}," < docker-compose.yml.tmpl > docker-compose.yml
    - ./run-cluster-test
